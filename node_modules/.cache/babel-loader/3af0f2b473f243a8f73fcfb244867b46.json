{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shiraz/Desktop/Art Portfolio/src/containers/PortfolioPage/artWork.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Marginer } from \"../../components/marginer\";\nimport { PictureCard } from \"../../components/pictureCard\";\nimport PictureTwo from \"../../images/Artwork/PictureTwo.jpg\";\nimport PictureFour from \"../../images/Artwork/PictureFour.jpg\";\nimport PictureSix from \"../../images/Artwork/PictureSix.jpg\";\nimport PictureEight from \"../../images/Artwork/PictureEight.jpg\";\nconst InnerPageContainer = styled.div`\n  flex: 1;\n  width: 100%;\n  max-width: ${({\n  maxWidth\n}) => maxWidth ? maxWidth : \"auto\"};\n  /*min-height Need more testing*/\n  min-height: 70vh;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  \n`;\n_c = InnerPageContainer;\nconst PictureContainer = styled.div`\n    display:block;\n    width: 80%;\n    box-shadow: 0px 0px 15px rgb(0,0,0);\n    outline-style: ridge;\n    outline-width: 13px;\n    outline-color: #d8b1b1;\n    \n    \n`;\n_c2 = PictureContainer;\nconst PictureThumbnail = styled.div`\n    width: 100%;\n    height: 30em;\n    \n\n    img{\n        width: 100%;\n        height: 100%;\n    }\n`;\n_c3 = PictureThumbnail;\nconst FavouriteContainer = styled.div`\n\n    width: 100%;\n    display: flex;\n    background-color:#f8dfdf;\n    flex-direction:row;\n    align-items: center;\n    justify-content: space-evenly;\n`;\n_c4 = FavouriteContainer;\nconst FavWrapper = styled.div`\n    \n    display: flex;\n    flex-wrap:wrap;\n    flex-direction: row;\n    @media screen and (max-width: ${980}px) {\n        display: block;\n       flex-direction: column;\n       justify-content: center;\n    }\n`;\n_c5 = FavWrapper;\nconst WarningText = styled.h3`\n    color: rgb(0, 0, 0);\n    font-weight: 500;\n\n`;\nexport function Artwork(props) {\n  return /*#__PURE__*/_jsxDEV(FavouriteContainer, {\n    children: /*#__PURE__*/_jsxDEV(FavWrapper, {\n      children: /*#__PURE__*/_jsxDEV(InnerPageContainer, {\n        children: [/*#__PURE__*/_jsxDEV(PictureContainer, {\n          children: /*#__PURE__*/_jsxDEV(PictureThumbnail, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: PictureTwo,\n              alt: \"Thamina Art Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n          direction: \"horizontal\",\n          margin: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PictureContainer, {\n          children: /*#__PURE__*/_jsxDEV(PictureThumbnail, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: PictureFour,\n              alt: \"Thamina Art Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n          direction: \"horizontal\",\n          margin: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PictureContainer, {\n          children: /*#__PURE__*/_jsxDEV(PictureThumbnail, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: PictureSix,\n              alt: \"Thamina Art Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n          direction: \"horizontal\",\n          margin: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PictureContainer, {\n          children: /*#__PURE__*/_jsxDEV(PictureThumbnail, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: PictureEight,\n              alt: \"Thamina Art Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 12\n  }, this);\n  /* </FavouriteContainer>   const [offeredPics, setPics] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  \n  const isArtworkEmpty = !offeredPics || (offeredPics && offeredPics.length === 0);\n  \n  const fetchArtwork = async () => {\n      setLoading(true);\n      const response = await axios.get(\"http://localhost:3000/FavPics\").catch(\n          (err) => {\n              console.log(\"Error: \", err);\n          }\n      );\n  \n      if (response) {\n          setPics(response.data);\n      }\n      setLoading(false);\n  \n  };\n  useEffect(() => {\n      fetchArtwork();\n  }, []);\n  \n  return <FavouriteContainer>\n      <FavWrapper>\n          {isArtworkEmpty && !isLoading && (\n              <WarningText>No Pictures have been posted yet...Coming Soon! x </WarningText>\n          )}\n          {isLoading &&\n              <WarningText>Art is Loading...</WarningText>}\n          {!isArtworkEmpty &&\n              !isLoading &&\n              offeredPics.map((FavPics, idx) => (\n                  <PictureCard key={idx} {...FavPics} />\n              ))}\n      </FavWrapper>\n  \n  \n  \n  </FavouriteContainer> */\n}\n_c6 = Artwork;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"InnerPageContainer\");\n$RefreshReg$(_c2, \"PictureContainer\");\n$RefreshReg$(_c3, \"PictureThumbnail\");\n$RefreshReg$(_c4, \"FavouriteContainer\");\n$RefreshReg$(_c5, \"FavWrapper\");\n$RefreshReg$(_c6, \"Artwork\");","map":{"version":3,"sources":["/Users/shiraz/Desktop/Art Portfolio/src/containers/PortfolioPage/artWork.jsx"],"names":["React","useEffect","useState","styled","axios","Marginer","PictureCard","PictureTwo","PictureFour","PictureSix","PictureEight","InnerPageContainer","div","maxWidth","PictureContainer","PictureThumbnail","FavouriteContainer","FavWrapper","WarningText","h3","Artwork","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAGA,MAAMC,kBAAkB,GAAGR,MAAM,CAACS,GAAI;AACtC;AACA;AACA,eAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmBA,QAAQ,GAAGA,QAAH,GAAc,MAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;KAAMF,kB;AAaN,MAAMG,gBAAgB,GAAGX,MAAM,CAACS,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAME,gB;AAYN,MAAMC,gBAAgB,GAAGZ,MAAM,CAACS,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMG,gB;AAWN,MAAMC,kBAAkB,GAAGb,MAAM,CAACS,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMI,kB;AAUN,MAAMC,UAAU,GAAGd,MAAM,CAACS,GAAI;AAC9B;AACA;AACA;AACA;AACA,oCAAoC,GAAI;AACxC;AACA;AACA;AACA;AACA,CAVA;MAAMK,U;AAaN,MAAMC,WAAW,GAAGf,MAAM,CAACgB,EAAG;AAC9B;AACA;AACA;AACA,CAJA;AAMA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAE3B,sBAAO,QAAC,kBAAD;AAAA,2BACH,QAAC,UAAD;AAAA,6BACI,QAAC,kBAAD;AAAA,gCACI,QAAC,gBAAD;AAAA,iCACI,QAAC,gBAAD;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEd,UAAV;AAAsB,cAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,YAApB;AAAiC,UAAA,MAAM,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBANJ,eAQI,QAAC,gBAAD;AAAA,iCACI,QAAC,gBAAD;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEC,WAAV;AAAuB,cAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAaI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,YAApB;AAAiC,UAAA,MAAM,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI,QAAC,gBAAD;AAAA,iCACI,QAAC,gBAAD;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEC,UAAV;AAAsB,cAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAmBI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,YAApB;AAAiC,UAAA,MAAM,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAoBI,QAAC,gBAAD;AAAA,iCACI,QAAC,gBAAD;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEC,YAAV;AAAwB,cAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAmCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;MA9EeU,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Marginer } from \"../../components/marginer\";\nimport { PictureCard } from \"../../components/pictureCard\";\nimport PictureTwo from \"../../images/Artwork/PictureTwo.jpg\";\nimport PictureFour from \"../../images/Artwork/PictureFour.jpg\";\nimport PictureSix from \"../../images/Artwork/PictureSix.jpg\";\nimport PictureEight from \"../../images/Artwork/PictureEight.jpg\";\n\n\nconst InnerPageContainer = styled.div`\n  flex: 1;\n  width: 100%;\n  max-width: ${({ maxWidth }) => (maxWidth ? maxWidth : \"auto\")};\n  /*min-height Need more testing*/\n  min-height: 70vh;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  \n`;\nconst PictureContainer = styled.div`\n    display:block;\n    width: 80%;\n    box-shadow: 0px 0px 15px rgb(0,0,0);\n    outline-style: ridge;\n    outline-width: 13px;\n    outline-color: #d8b1b1;\n    \n    \n`;\n\n\nconst PictureThumbnail = styled.div`\n    width: 100%;\n    height: 30em;\n    \n\n    img{\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nconst FavouriteContainer = styled.div`\n\n    width: 100%;\n    display: flex;\n    background-color:#f8dfdf;\n    flex-direction:row;\n    align-items: center;\n    justify-content: space-evenly;\n`;\n\nconst FavWrapper = styled.div`\n    \n    display: flex;\n    flex-wrap:wrap;\n    flex-direction: row;\n    @media screen and (max-width: ${980}px) {\n        display: block;\n       flex-direction: column;\n       justify-content: center;\n    }\n`;\n\n\nconst WarningText = styled.h3`\n    color: rgb(0, 0, 0);\n    font-weight: 500;\n\n`;\n\nexport function Artwork(props) {\n\n    return <FavouriteContainer>\n        <FavWrapper>\n            <InnerPageContainer>\n                <PictureContainer>\n                    <PictureThumbnail>\n                        <img src={PictureTwo} alt=\"Thamina Art Logo\" />\n                    </PictureThumbnail>\n                </PictureContainer>\n                <Marginer direction=\"horizontal\" margin={150} />\n\n                <PictureContainer>\n                    <PictureThumbnail>\n                        <img src={PictureFour} alt=\"Thamina Art Logo\" />\n                    </PictureThumbnail>\n                </PictureContainer>\n                <Marginer direction=\"horizontal\" margin={150} />\n                <PictureContainer>\n                    <PictureThumbnail>\n                        <img src={PictureSix} alt=\"Thamina Art Logo\" />\n                    </PictureThumbnail>\n                </PictureContainer>\n                <Marginer direction=\"horizontal\" margin={150} />\n                <PictureContainer>\n                    <PictureThumbnail>\n                        <img src={PictureEight} alt=\"Thamina Art Logo\" />\n                    </PictureThumbnail>\n                </PictureContainer>\n            </InnerPageContainer>\n        </FavWrapper>\n    </FavouriteContainer>\n\n\n\n\n\n    /* </FavouriteContainer>   const [offeredPics, setPics] = useState([]);\n    const [isLoading, setLoading] = useState(false);\n    \n    const isArtworkEmpty = !offeredPics || (offeredPics && offeredPics.length === 0);\n    \n    const fetchArtwork = async () => {\n        setLoading(true);\n        const response = await axios.get(\"http://localhost:3000/FavPics\").catch(\n            (err) => {\n                console.log(\"Error: \", err);\n            }\n        );\n    \n        if (response) {\n            setPics(response.data);\n        }\n        setLoading(false);\n    \n    };\n    useEffect(() => {\n        fetchArtwork();\n    }, []);\n    \n    return <FavouriteContainer>\n        <FavWrapper>\n            {isArtworkEmpty && !isLoading && (\n                <WarningText>No Pictures have been posted yet...Coming Soon! x </WarningText>\n            )}\n            {isLoading &&\n                <WarningText>Art is Loading...</WarningText>}\n            {!isArtworkEmpty &&\n                !isLoading &&\n                offeredPics.map((FavPics, idx) => (\n                    <PictureCard key={idx} {...FavPics} />\n                ))}\n        </FavWrapper>\n    \n    \n    \n    </FavouriteContainer> */\n\n}"]},"metadata":{},"sourceType":"module"}